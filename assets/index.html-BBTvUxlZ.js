import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-JmFXyXmh.js";const e={},p=t('<h1 id="реалізація-інформаціиного-та-програмного-забезпечення" tabindex="-1"><a class="header-anchor" href="#реалізація-інформаціиного-та-програмного-забезпечення"><span>Реалізація інформаційного та програмного забезпечення</span></a></h1><h2 id="короткии-зміст" tabindex="-1"><a class="header-anchor" href="#короткии-зміст"><span>Короткий зміст</span></a></h2><ul><li><a href="#%D1%80%D0%B5%D0%B0%D0%BB%D1%96%D0%B7%D0%B0%D1%86%D1%96%D1%8F-%D1%96%D0%BD%D1%84%D0%BE%D1%80%D0%BC%D0%B0%D1%86%D1%96%D0%B9%D0%BD%D0%BE%D0%B3%D0%BE-%D1%82%D0%B0-%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BD%D0%BE%D0%B3%D0%BE-%D0%B7%D0%B0%D0%B1%D0%B5%D0%B7%D0%BF%D0%B5%D1%87%D0%B5%D0%BD%D0%BD%D1%8F">Реалізація інформаційного та програмного забезпечення</a><ul><li><a href="#sql-%D1%81%D0%BA%D1%80%D0%B8%D0%BF%D1%82-%D0%B4%D0%BB%D1%8F-%D1%81%D1%82%D0%B2%D0%BE%D1%80%D0%B5%D0%BD%D0%BD%D1%8F-%D1%82%D0%B0-%D0%BF%D0%BE%D1%87%D0%B0%D1%82%D0%BA%D0%BE%D0%B2%D0%BE%D0%B3%D0%BE-%D0%BD%D0%B0%D0%BF%D0%BE%D0%B2%D0%BD%D0%B5%D0%BD%D0%BD%D1%8F-%D0%B1%D0%B0%D0%B7%D0%B8-%D0%B4%D0%B0%D0%BD%D0%B8%D1%85">SQL-скрипт для створення та початкового наповнення бази даних</a></li><li><a href="#restful-%D1%81%D0%B5%D1%80%D0%B2%D1%96%D1%81-%D0%B4%D0%BB%D1%8F-%D1%83%D0%BF%D1%80%D0%B0%D0%B2%D0%BB%D1%96%D0%BD%D0%BD%D1%8F-%D0%B4%D0%B0%D0%BD%D0%B8%D0%BC%D0%B8">RESTful сервіс для управління даними</a></li></ul></li></ul><h2 id="sql-скрипт-для-створення-та-початкового-наповнення-бази-даних" tabindex="-1"><a class="header-anchor" href="#sql-скрипт-для-створення-та-початкового-наповнення-бази-даних"><span>SQL-скрипт для створення та початкового наповнення бази даних</span></a></h2><div class="language-SQL line-numbers-mode" data-ext="SQL" data-title="SQL"><pre class="language-SQL"><code>-- MySQL Workbench Forward Engineering\n\nSET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;\nSET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;\nSET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE=&#39;ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION&#39;;\n\n-- -----------------------------------------------------\n-- Schema mydb\n-- -----------------------------------------------------\n\n-- -----------------------------------------------------\n-- Schema mydb\n-- -----------------------------------------------------\nCREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;\nUSE `mydb` ;\n\n-- -----------------------------------------------------\n-- Table `mydb`.`Role`\n-- -----------------------------------------------------\nCREATE TABLE IF NOT EXISTS `mydb`.`Role` (\n  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,\n  `name` VARCHAR(45) NOT NULL,\n  `description` VARCHAR(255) NOT NULL,\n  PRIMARY KEY (`id`),\n  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `mydb`.`User`\n-- -----------------------------------------------------\nCREATE TABLE IF NOT EXISTS `mydb`.`User` (\n  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,\n  `name` VARCHAR(45) NOT NULL,\n  `password` VARCHAR(255) NOT NULL,\n  `email` VARCHAR(45) NOT NULL,\n  `account_creation_date` DATETIME NOT NULL,\n  `last_login_date` DATETIME NULL,\n  `Role_id` INT UNSIGNED NOT NULL,\n  PRIMARY KEY (`id`, `Role_id`),\n  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,\n  INDEX `fk_User_Role_idx` (`Role_id` ASC) VISIBLE,\n  CONSTRAINT `fk_User_Role`\n    FOREIGN KEY (`Role_id`)\n    REFERENCES `mydb`.`Role` (`id`)\n    ON DELETE NO ACTION\n    ON UPDATE CASCADE)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `mydb`.`Category`\n-- -----------------------------------------------------\nCREATE TABLE IF NOT EXISTS `mydb`.`Category` (\n  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,\n  `name` VARCHAR(45) NOT NULL,\n  `description` VARCHAR(255) NULL,\n  PRIMARY KEY (`id`))\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `mydb`.`Data`\n-- -----------------------------------------------------\nCREATE TABLE IF NOT EXISTS `mydb`.`Data` (\n  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,\n  `name` VARCHAR(45) NOT NULL,\n  `content` VARCHAR(255) NOT NULL,\n  `upload_date` DATETIME NOT NULL,\n  `last_edit_date` DATETIME NULL,\n  `Category_id` INT UNSIGNED NOT NULL,\n  PRIMARY KEY (`id`, `Category_id`),\n  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE,\n  INDEX `fk_Data_Category1_idx` (`Category_id` ASC) VISIBLE,\n  CONSTRAINT `fk_Data_Category1`\n    FOREIGN KEY (`Category_id`)\n    REFERENCES `mydb`.`Category` (`id`)\n    ON DELETE NO ACTION\n    ON UPDATE CASCADE)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `mydb`.`Comment`\n-- -----------------------------------------------------\nCREATE TABLE IF NOT EXISTS `mydb`.`Comment` (\n  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,\n  `content` VARCHAR(255) NOT NULL,\n  `creation_date` DATETIME NOT NULL,\n  `User_id` INT UNSIGNED NOT NULL,\n  `Data_id` INT UNSIGNED NOT NULL,\n  PRIMARY KEY (`id`),\n  INDEX `fk_Comment_User1_idx` (`User_id` ASC) VISIBLE,\n  INDEX `fk_Comment_Data1_idx` (`Data_id` ASC) VISIBLE,\n  CONSTRAINT `fk_Comment_User1`\n    FOREIGN KEY (`User_id`)\n    REFERENCES `mydb`.`User` (`id`)\n    ON DELETE CASCADE\n    ON UPDATE CASCADE,\n  CONSTRAINT `fk_Comment_Data1`\n    FOREIGN KEY (`Data_id`)\n    REFERENCES `mydb`.`Data` (`id`)\n    ON DELETE CASCADE\n    ON UPDATE CASCADE)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `mydb`.`Permission`\n-- -----------------------------------------------------\nCREATE TABLE IF NOT EXISTS `mydb`.`Permission` (\n  `id` INT NOT NULL AUTO_INCREMENT,\n  `name` VARCHAR(45) NOT NULL,\n  `description` VARCHAR(255) NULL,\n  `Role_id` INT UNSIGNED NOT NULL,\n  PRIMARY KEY (`id`, `Role_id`),\n  INDEX `fk_Permission_Role1_idx` (`Role_id` ASC) VISIBLE,\n  CONSTRAINT `fk_Permission_Role1`\n    FOREIGN KEY (`Role_id`)\n    REFERENCES `mydb`.`Role` (`id`)\n    ON DELETE CASCADE\n    ON UPDATE CASCADE)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `mydb`.`Session`\n-- -----------------------------------------------------\nCREATE TABLE IF NOT EXISTS `mydb`.`Session` (\n  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,\n  `login_time` DATETIME NOT NULL,\n  `logout_time` DATETIME NOT NULL,\n  `User_id` INT UNSIGNED NOT NULL,\n  PRIMARY KEY (`id`, `User_id`),\n  INDEX `fk_Session_User1_idx` (`User_id` ASC) VISIBLE,\n  CONSTRAINT `fk_Session_User1`\n    FOREIGN KEY (`User_id`)\n    REFERENCES `mydb`.`User` (`id`)\n    ON DELETE CASCADE\n    ON UPDATE CASCADE)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `mydb`.`Log`\n-- -----------------------------------------------------\nCREATE TABLE IF NOT EXISTS `mydb`.`Log` (\n  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,\n  `action_type` VARCHAR(45) NOT NULL,\n  `action_date` DATETIME NOT NULL,\n  `User_id` INT UNSIGNED NOT NULL,\n  `Data_id` INT UNSIGNED NOT NULL,\n  PRIMARY KEY (`id`),\n  INDEX `fk_Log_User1_idx` (`User_id` ASC) VISIBLE,\n  INDEX `fk_Log_Data1_idx` (`Data_id` ASC) VISIBLE,\n  CONSTRAINT `fk_Log_User1`\n    FOREIGN KEY (`User_id`)\n    REFERENCES `mydb`.`User` (`id`)\n    ON DELETE CASCADE\n    ON UPDATE CASCADE,\n  CONSTRAINT `fk_Log_Data1`\n    FOREIGN KEY (`Data_id`)\n    REFERENCES `mydb`.`Data` (`id`)\n    ON DELETE CASCADE\n    ON UPDATE CASCADE)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `mydb`.`Access`\n-- -----------------------------------------------------\nCREATE TABLE IF NOT EXISTS `mydb`.`Access` (\n  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,\n  `access_type` VARCHAR(45) NOT NULL,\n  `User_id` INT UNSIGNED NOT NULL,\n  `Data_id` INT UNSIGNED NOT NULL,\n  PRIMARY KEY (`id`),\n  INDEX `fk_Access_User1_idx` (`User_id` ASC) VISIBLE,\n  INDEX `fk_Access_Data1_idx` (`Data_id` ASC) VISIBLE,\n  CONSTRAINT `fk_Access_User1`\n    FOREIGN KEY (`User_id`)\n    REFERENCES `mydb`.`User` (`id`)\n    ON DELETE CASCADE\n    ON UPDATE CASCADE,\n  CONSTRAINT `fk_Access_Data1`\n    FOREIGN KEY (`Data_id`)\n    REFERENCES `mydb`.`Data` (`id`)\n    ON DELETE CASCADE\n    ON UPDATE CASCADE)\nENGINE = InnoDB;\n\n\nSET SQL_MODE=@OLD_SQL_MODE;\nSET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;\nSET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;\n\n-- -----------------------------------------------------\n-- Data for table `mydb`.`Role`\n-- -----------------------------------------------------\nSTART TRANSACTION;\nUSE `mydb`;\nINSERT INTO `mydb`.`Role` (`id`, `name`, `description`) VALUES (1, &#39;admin&#39;, &#39;responsible for managing and publishing data, can import new data, organize it into sets, add metadata, and publish it for other users to access&#39;);\nINSERT INTO `mydb`.`Role` (`id`, `name`, `description`) VALUES (2, &#39;user&#39;, &#39;creates tools and APIs to integrate data with the system, develops and tests modules for working with data and ensure compatibility with other services&#39;);\n\nCOMMIT;\n\n\n-- -----------------------------------------------------\n-- Data for table `mydb`.`User`\n-- -----------------------------------------------------\nSTART TRANSACTION;\nUSE `mydb`;\nINSERT INTO `mydb`.`User` (`id`, `name`, `password`, `email`, `account_creation_date`, `last_login_date`, `Role_id`) VALUES (1, &#39;Dmytro_Kulyk&#39;, &#39;abcdefgh&#39;, &#39;kulyk.dmytro@lll.kpi.ua&#39;, &#39;2024-10-17 12:28:24&#39;, &#39;2024-11-03 10:07:42&#39;, 1);\nINSERT INTO `mydb`.`User` (`id`, `name`, `password`, `email`, `account_creation_date`, `last_login_date`, `Role_id`) VALUES (2, &#39;Yulianna_Vakhnina&#39;, &#39;abcdefghij&#39;, &#39;vakhnina.yulianna@lll.kpi.ua&#39;, &#39;2024-10-27 13:42:21&#39;, &#39;2024-11-03 10:11:42&#39;, 1);\nINSERT INTO `mydb`.`User` (`id`, `name`, `password`, `email`, `account_creation_date`, `last_login_date`, `Role_id`) VALUES (3, &#39;Artem_Balabas&#39;, &#39;12345678&#39;, &#39;balabas.artem@lll.kpi.ua&#39;, &#39;2024-11-01 11:28:55&#39;, &#39;2024-11-03 09:11:42&#39;, 2);\nINSERT INTO `mydb`.`User` (`id`, `name`, `password`, `email`, `account_creation_date`, `last_login_date`, `Role_id`) VALUES (4, &#39;Lev_Bereza&#39;, &#39;87654321&#39;, &#39;bereza.lev@lll.kpi.ua&#39;, &#39;2024-11-01 13:15:37&#39;, NULL, 2);\nINSERT INTO `mydb`.`User` (`id`, `name`, `password`, `email`, `account_creation_date`, `last_login_date`, `Role_id`) VALUES (5, &#39;Yaroslav_Kantur&#39;, &#39;546846sd&#39;, &#39;kantur.yaroslav@lll.kpi.ua&#39;, &#39;2024-10-28 15:53:12&#39;, NULL, 2);\nINSERT INTO `mydb`.`User` (`id`, `name`, `password`, `email`, `account_creation_date`, `last_login_date`, `Role_id`) VALUES (6, &#39;Danylo_Pistriuha&#39;, &#39;09876543&#39;, &#39;pistriuha.danylo@lll.kpi.ua&#39;, &#39;2024-11-01 12:33:28&#39;, &#39;2024-11-02 14:15:11&#39;, 2);\nINSERT INTO `mydb`.`User` (`id`, `name`, `password`, `email`, `account_creation_date`, `last_login_date`, `Role_id`) VALUES (7, &#39;Volodymyr_Shkarban&#39;, &#39;34567890&#39;, &#39;shkarban.volodymyr@lll.kpi.ua&#39;, &#39;2024-11-01 18:45:01&#39;, NULL, 2);\n\nCOMMIT;\n\n\n-- -----------------------------------------------------\n-- Data for table `mydb`.`Category`\n-- -----------------------------------------------------\nSTART TRANSACTION;\nUSE `mydb`;\nINSERT INTO `mydb`.`Category` (`id`, `name`, `description`) VALUES (1, &#39;Science&#39;, &#39;Information related to science&#39;);\nINSERT INTO `mydb`.`Category` (`id`, `name`, `description`) VALUES (2, &#39;Technology&#39;, &#39;Technological and societal data&#39;);\nINSERT INTO `mydb`.`Category` (`id`, `name`, `description`) VALUES (3, &#39;Environment&#39;, &#39;Environmental and health studies&#39;);\n\nCOMMIT;\n\n\n-- -----------------------------------------------------\n-- Data for table `mydb`.`Data`\n-- -----------------------------------------------------\nSTART TRANSACTION;\nUSE `mydb`;\nINSERT INTO `mydb`.`Data` (`id`, `name`, `content`, `upload_date`, `last_edit_date`, `Category_id`) VALUES (1, &#39;Climate Change Impact&#39;, &#39;Global warming data 1990-2020&#39;, &#39;2023-02-26 10:26:54&#39;, &#39;2023-03-12 12:24:28&#39;, 3);\nINSERT INTO `mydb`.`Data` (`id`, `name`, `content`, `upload_date`, `last_edit_date`, `Category_id`) VALUES (2, &#39;Population by Country 2023&#39;, &#39;Population numbers by country&#39;, &#39;2023-05-12 19:15:12&#39;, NULL, 1);\nINSERT INTO `mydb`.`Data` (`id`, `name`, `content`, `upload_date`, `last_edit_date`, `Category_id`) VALUES (3, &#39;COVID-19 Vaccination Statistics&#39;, &#39;Vaccination data from 2020 onwards&#39;, &#39;2023-11-30 16:17:29&#39;, &#39;2024-10-16 17:30:56&#39;, 3);\nINSERT INTO `mydb`.`Data` (`id`, `name`, `content`, `upload_date`, `last_edit_date`, `Category_id`) VALUES (4, &#39;Renewable Energy Usage 2022&#39;, &#39;Energy data by source, 2022&#39;, &#39;2023-01-12 17:26:17&#39;, NULL, 3);\nINSERT INTO `mydb`.`Data` (`id`, `name`, `content`, `upload_date`, `last_edit_date`, `Category_id`) VALUES (5, &#39;World Education Index 2023&#39;, &#39;Education index for countries worldwide&#39;, &#39;2024-04-08 08:54:54&#39;, NULL, 1);\nINSERT INTO `mydb`.`Data` (`id`, `name`, `content`, `upload_date`, `last_edit_date`, `Category_id`) VALUES (6, &#39;Tech Innovations 2023&#39;, &#39;Key tech breakthroughs of the year&#39;, &#39;2024-03-15 11:49:02&#39;, NULL, 2);\nINSERT INTO `mydb`.`Data` (`id`, `name`, `content`, `upload_date`, `last_edit_date`, `Category_id`) VALUES (7, &#39;Global Health Spending&#39;, &#39;Health expenditure by country&#39;, &#39;2022-08-16 13:23:16&#39;, &#39;2024-06-09 12:17:53&#39;, 3);\nINSERT INTO `mydb`.`Data` (`id`, `name`, `content`, `upload_date`, `last_edit_date`, `Category_id`) VALUES (8, &#39;Employment Rates by Sector&#39;, &#39;Employment data by economic sector&#39;, &#39;2022-12-20 20:28:32&#39;, &#39;2023-01-19 14:01:12&#39;, 1);\nINSERT INTO `mydb`.`Data` (`id`, `name`, `content`, `upload_date`, `last_edit_date`, `Category_id`) VALUES (9, &#39;Cultural Heritage Sites&#39;, &#39;UNESCO heritage sites worldwide&#39;, &#39;2023-05-04 09:41:32&#39;, &#39;2024-08-01 17:23:15&#39;, 1);\nINSERT INTO `mydb`.`Data` (`id`, `name`, `content`, `upload_date`, `last_edit_date`, `Category_id`) VALUES (10, &#39;Food Production Statistics&#39;, &#39;Global food production by type&#39;, &#39;2023-10-26 11:11:11&#39;, &#39;2024-05-07 16:15:45&#39;, 3);\n\nCOMMIT;\n\n\n-- -----------------------------------------------------\n-- Data for table `mydb`.`Comment`\n-- -----------------------------------------------------\nSTART TRANSACTION;\nUSE `mydb`;\nINSERT INTO `mydb`.`Comment` (`id`, `content`, `creation_date`, `User_id`, `Data_id`) VALUES (1, &#39;Details by country would make this more useful&#39;, &#39;2024-11-05 08:32:14&#39;, 2, 1);\nINSERT INTO `mydb`.`Comment` (`id`, `content`, `creation_date`, `User_id`, `Data_id`) VALUES (2, &#39;Good to see updated info! Thanks&#39;, &#39;2024-11-05 14:23:52&#39;, 2, 3);\nINSERT INTO `mydb`.`Comment` (`id`, `content`, `creation_date`, `User_id`, `Data_id`) VALUES (3, &#39;Nice index! More info on remote regions would help&#39;, &#39;2024-11-08 13:32:55&#39;, 5, 5);\nINSERT INTO `mydb`.`Comment` (`id`, `content`, `creation_date`, `User_id`, `Data_id`) VALUES (4, &#39;Perfect for analysis. Add pandemic funding data?&#39;, &#39;2024-11-08 08:18:34&#39;, 7, 7);\nINSERT INTO `mydb`.`Comment` (`id`, `content`, `creation_date`, `User_id`, `Data_id`) VALUES (5, &#39;Thanks for this! More on IT and healthcare would help&#39;, &#39;2024-11-06 09:38:27&#39;, 4, 8);\nINSERT INTO `mydb`.`Comment` (`id`, `content`, `creation_date`, `User_id`, `Data_id`) VALUES (6, &#39;More photos and history of each site would be cool&#39;, &#39;2024-11-07 14:16:32&#39;, 6, 9);\nINSERT INTO `mydb`.`Comment` (`id`, `content`, `creation_date`, `User_id`, `Data_id`) VALUES (7, &#39;Could it include data on organic vs. conventional farming?&#39;, &#39;2024-11-07 13:27:14&#39;, 3, 10);\n\nCOMMIT;\n\n\n-- -----------------------------------------------------\n-- Data for table `mydb`.`Permission`\n-- -----------------------------------------------------\nSTART TRANSACTION;\nUSE `mydb`;\nINSERT INTO `mydb`.`Permission` (`id`, `name`, `description`, `Role_id`) VALUES (1, &#39;read&#39;, &#39;for admin&#39;, 1);\nINSERT INTO `mydb`.`Permission` (`id`, `name`, `description`, `Role_id`) VALUES (2, &#39;edit&#39;, &#39;for admin&#39;, 1);\nINSERT INTO `mydb`.`Permission` (`id`, `name`, `description`, `Role_id`) VALUES (3, &#39;upload&#39;, &#39;for admin&#39;, 1);\nINSERT INTO `mydb`.`Permission` (`id`, `name`, `description`, `Role_id`) VALUES (4, &#39;download&#39;, &#39;for admin&#39;, 1);\nINSERT INTO `mydb`.`Permission` (`id`, `name`, `description`, `Role_id`) VALUES (5, &#39;delete&#39;, &#39;for admin&#39;, 1);\nINSERT INTO `mydb`.`Permission` (`id`, `name`, `description`, `Role_id`) VALUES (6, &#39;read&#39;, &#39;for user&#39;, 2);\nINSERT INTO `mydb`.`Permission` (`id`, `name`, `description`, `Role_id`) VALUES (7, &#39;edit&#39;, &#39;for user&#39;, 2);\nINSERT INTO `mydb`.`Permission` (`id`, `name`, `description`, `Role_id`) VALUES (8, &#39;upload&#39;, &#39;for uses&#39;, 2);\nINSERT INTO `mydb`.`Permission` (`id`, `name`, `description`, `Role_id`) VALUES (9, &#39;download&#39;, &#39;for user&#39;, 2);\n\nCOMMIT;\n\n\n-- -----------------------------------------------------\n-- Data for table `mydb`.`Session`\n-- -----------------------------------------------------\nSTART TRANSACTION;\nUSE `mydb`;\nINSERT INTO `mydb`.`Session` (`id`, `login_time`, `logout_time`, `User_id`) VALUES (1, &#39;2024-11-03 10:07:42&#39;, &#39;2024-11-03 11:12:32&#39;, 1);\nINSERT INTO `mydb`.`Session` (`id`, `login_time`, `logout_time`, `User_id`) VALUES (2, &#39;2024-11-03 10:11:42&#39;, &#39;2024-11-03 11:01:41&#39;, 2);\nINSERT INTO `mydb`.`Session` (`id`, `login_time`, `logout_time`, `User_id`) VALUES (3, &#39;2024-11-03 09:11:42&#39;, &#39;2024-11-03 10:35:13&#39;, 3);\nINSERT INTO `mydb`.`Session` (`id`, `login_time`, `logout_time`, `User_id`) VALUES (4, &#39;2024-11-02 14:15:11&#39;, &#39;2024-11-02 15:17:19&#39;, 6);\n\nCOMMIT;\n\n\n-- -----------------------------------------------------\n-- Data for table `mydb`.`Log`\n-- -----------------------------------------------------\nSTART TRANSACTION;\nUSE `mydb`;\nINSERT INTO `mydb`.`Log` (`id`, `action_type`, `action_date`, `User_id`, `Data_id`) VALUES (1, &#39;upload&#39;, &#39;2023-02-26 10:26:54&#39;, 7, 1);\nINSERT INTO `mydb`.`Log` (`id`, `action_type`, `action_date`, `User_id`, `Data_id`) VALUES (2, &#39;edit&#39;, &#39;2023-03-12 12:24:28&#39;, 7, 1);\nINSERT INTO `mydb`.`Log` (`id`, `action_type`, `action_date`, `User_id`, `Data_id`) VALUES (3, &#39;upload&#39;, &#39;2023-05-12 19:15:12&#39;, 5, 2);\nINSERT INTO `mydb`.`Log` (`id`, `action_type`, `action_date`, `User_id`, `Data_id`) VALUES (4, &#39;upload&#39;, &#39;2023-11-30 16:17:29&#39;, 2, 3);\nINSERT INTO `mydb`.`Log` (`id`, `action_type`, `action_date`, `User_id`, `Data_id`) VALUES (5, &#39;edit&#39;, &#39;2024-10-16 17:30:56&#39;, 6, 3);\nINSERT INTO `mydb`.`Log` (`id`, `action_type`, `action_date`, `User_id`, `Data_id`) VALUES (6, &#39;upload&#39;, &#39;2023-01-12 17:26:17&#39;, 1, 4);\nINSERT INTO `mydb`.`Log` (`id`, `action_type`, `action_date`, `User_id`, `Data_id`) VALUES (7, &#39;upload&#39;, &#39;2024-04-08 08:54:54&#39;, 1, 5);\nINSERT INTO `mydb`.`Log` (`id`, `action_type`, `action_date`, `User_id`, `Data_id`) VALUES (8, &#39;upload&#39;, &#39;2024-03-15 11:49:02&#39;, 3, 6);\nINSERT INTO `mydb`.`Log` (`id`, `action_type`, `action_date`, `User_id`, `Data_id`) VALUES (9, &#39;upload&#39;, &#39;2022-08-16 13:23:16&#39;, 3, 7);\nINSERT INTO `mydb`.`Log` (`id`, `action_type`, `action_date`, `User_id`, `Data_id`) VALUES (10, &#39;edit&#39;, &#39;2024-06-09 12:17:53&#39;, 3, 7);\nINSERT INTO `mydb`.`Log` (`id`, `action_type`, `action_date`, `User_id`, `Data_id`) VALUES (11, &#39;upload&#39;, &#39;2022-12-20 20:28:32&#39;, 4, 8);\nINSERT INTO `mydb`.`Log` (`id`, `action_type`, `action_date`, `User_id`, `Data_id`) VALUES (12, &#39;edit&#39;, &#39;2023-01-19 14:01:12&#39;, 5, 8);\nINSERT INTO `mydb`.`Log` (`id`, `action_type`, `action_date`, `User_id`, `Data_id`) VALUES (13, &#39;upload&#39;, &#39;2023-05-04 09:41:32&#39;, 6, 9);\nINSERT INTO `mydb`.`Log` (`id`, `action_type`, `action_date`, `User_id`, `Data_id`) VALUES (14, &#39;edit&#39;, &#39;2024-08-01 17:23:15&#39;, 6, 9);\nINSERT INTO `mydb`.`Log` (`id`, `action_type`, `action_date`, `User_id`, `Data_id`) VALUES (15, &#39;upload&#39;, &#39;2023-10-26 11:11:11&#39;, 2, 10);\nINSERT INTO `mydb`.`Log` (`id`, `action_type`, `action_date`, `User_id`, `Data_id`) VALUES (16, &#39;edit&#39;, &#39;2024-05-07 16:15:45&#39;, 1, 10);\n\nCOMMIT;\n\n\n-- -----------------------------------------------------\n-- Data for table `mydb`.`Access`\n-- -----------------------------------------------------\nSTART TRANSACTION;\nUSE `mydb`;\nINSERT INTO `mydb`.`Access` (`id`, `access_type`, `User_id`, `Data_id`) VALUES (1, &#39;read&#39;, 1, 3);\nINSERT INTO `mydb`.`Access` (`id`, `access_type`, `User_id`, `Data_id`) VALUES (2, &#39;edit&#39;, 1, 3);\nINSERT INTO `mydb`.`Access` (`id`, `access_type`, `User_id`, `Data_id`) VALUES (3, &#39;delete&#39;, 1, 3);\nINSERT INTO `mydb`.`Access` (`id`, `access_type`, `User_id`, `Data_id`) VALUES (4, &#39;read&#39;, 4, 7);\nINSERT INTO `mydb`.`Access` (`id`, `access_type`, `User_id`, `Data_id`) VALUES (5, &#39;edit&#39;, 4, 7);\nINSERT INTO `mydb`.`Access` (`id`, `access_type`, `User_id`, `Data_id`) VALUES (6, &#39;read&#39;, 5, 4);\nINSERT INTO `mydb`.`Access` (`id`, `access_type`, `User_id`, `Data_id`) VALUES (7, &#39;edit&#39;, 5, 4);\n\nCOMMIT;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="restful-сервіс-для-управління-даними" tabindex="-1"><a class="header-anchor" href="#restful-сервіс-для-управління-даними"><span>RESTful сервіс для управління даними</span></a></h2><h2 id="сервер-підключення-до-бд" tabindex="-1"><a class="header-anchor" href="#сервер-підключення-до-бд"><span>Сервер &amp; Підключення до БД</span></a></h2><p><strong>app.js</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> express <span class="token keyword">from</span> <span class="token string">&quot;express&quot;</span>\n<span class="token keyword">import</span> userRouter <span class="token keyword">from</span> <span class="token string">&quot;./routes/UserRoutes.js&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> sessionRouter <span class="token keyword">from</span> <span class="token string">&quot;./routes/SessionRoutes.js&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token constant">PORT</span> <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">PORT</span> <span class="token operator">||</span> <span class="token number">3000</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&quot;/api&quot;</span><span class="token punctuation">,</span> userRouter<span class="token punctuation">)</span><span class="token punctuation">;</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&quot;/api&quot;</span><span class="token punctuation">,</span> sessionRouter<span class="token punctuation">)</span><span class="token punctuation">;</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>errorHandler<span class="token punctuation">)</span>\n\napp<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token constant">PORT</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Listening on port </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">PORT</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>db.js</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> mysql <span class="token keyword">from</span> <span class="token string">&quot;mysql2/promise&quot;</span>\n<span class="token keyword">import</span> dotenv <span class="token keyword">from</span> <span class="token string">&quot;dotenv&quot;</span><span class="token punctuation">;</span>\n\ndotenv<span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> pool <span class="token operator">=</span> <span class="token keyword">await</span> mysql<span class="token punctuation">.</span><span class="token function">createPool</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">host</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">DB_HOST</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">user</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">DB_USER</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">password</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">DB_PASSWORD</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">database</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">DB_NAME</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> pool<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="маршрути" tabindex="-1"><a class="header-anchor" href="#маршрути"><span>Маршрути</span></a></h2><p><strong>UserRoutes.js</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>Router<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;express&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> userController <span class="token keyword">from</span> <span class="token string">&quot;../controllers/UserController.js&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">Router</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nrouter<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;/users&quot;</span><span class="token punctuation">,</span> userController<span class="token punctuation">.</span>createUser<span class="token punctuation">)</span>\nrouter<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/users&quot;</span><span class="token punctuation">,</span> userController<span class="token punctuation">.</span>getUsers<span class="token punctuation">)</span>\nrouter<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/users/:id&quot;</span><span class="token punctuation">,</span> userController<span class="token punctuation">.</span>getOneUser<span class="token punctuation">)</span>\nrouter<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;/users&quot;</span><span class="token punctuation">,</span> userController<span class="token punctuation">.</span>updateUser<span class="token punctuation">)</span>\nrouter<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">&quot;/users/:id&quot;</span><span class="token punctuation">,</span> userController<span class="token punctuation">.</span>deleteUser<span class="token punctuation">)</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> router<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>SessionRoutes.js</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>Router<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;express&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> sessionController <span class="token keyword">from</span> <span class="token string">&quot;../controllers/SessionController.js&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">Router</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nrouter<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;/sessions&quot;</span><span class="token punctuation">,</span> sessionController<span class="token punctuation">.</span>createSession<span class="token punctuation">)</span>\nrouter<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/sessions&quot;</span><span class="token punctuation">,</span> sessionController<span class="token punctuation">.</span>getSessions<span class="token punctuation">)</span>\nrouter<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/sessions/:id&quot;</span><span class="token punctuation">,</span> sessionController<span class="token punctuation">.</span>getOneSession<span class="token punctuation">)</span>\nrouter<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;/sessions&quot;</span><span class="token punctuation">,</span> sessionController<span class="token punctuation">.</span>updateSession<span class="token punctuation">)</span>\nrouter<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">&quot;/sessions/:id&quot;</span><span class="token punctuation">,</span> sessionController<span class="token punctuation">.</span>deleteSession<span class="token punctuation">)</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> router<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="контролери" tabindex="-1"><a class="header-anchor" href="#контролери"><span>Контролери</span></a></h2><p><strong>UserController.js</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> asyncHandler <span class="token keyword">from</span> <span class="token string">&quot;../utils/asyncHandler.js&quot;</span>\n<span class="token keyword">import</span> UserService <span class="token keyword">from</span> <span class="token string">&quot;../services/UserService.js&quot;</span>\n<span class="token keyword">import</span> ApiError <span class="token keyword">from</span> <span class="token string">&quot;../utils/apiError.js&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> transformData <span class="token keyword">from</span> <span class="token string">&quot;../utils/transformUserData.js&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Validator <span class="token keyword">from</span> <span class="token string">&quot;../utils/Validator.js&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">{</span>\n    createUser <span class="token operator">=</span> <span class="token function">asyncHandler</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token function">transformData</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">const</span> <span class="token punctuation">{</span>id<span class="token punctuation">,</span> email<span class="token punctuation">,</span> roleId<span class="token punctuation">}</span> <span class="token operator">=</span> Validator<span class="token punctuation">.</span><span class="token function">validateUserData</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">const</span> userById <span class="token operator">=</span> <span class="token keyword">await</span> UserService<span class="token punctuation">.</span><span class="token function">getOneUserById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>userById<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ApiError</span><span class="token punctuation">(</span><span class="token string">&quot;User already exists&quot;</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">await</span> Validator<span class="token punctuation">.</span><span class="token function">validateEmail</span><span class="token punctuation">(</span>UserService<span class="token punctuation">.</span>getOneUserByEmail<span class="token punctuation">,</span> email<span class="token punctuation">)</span>\n        <span class="token keyword">await</span> Validator<span class="token punctuation">.</span><span class="token function">validateRole</span><span class="token punctuation">(</span>UserService<span class="token punctuation">.</span>roleExists<span class="token punctuation">,</span> roleId<span class="token punctuation">)</span>\n\n        <span class="token keyword">await</span> UserService<span class="token punctuation">.</span><span class="token function">createUser</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">201</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">User with ID </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> successfully created</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    getUsers <span class="token operator">=</span> <span class="token function">asyncHandler</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> users <span class="token operator">=</span> <span class="token keyword">await</span> UserService<span class="token punctuation">.</span><span class="token function">getUsers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>users <span class="token operator">||</span> users<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ApiError</span><span class="token punctuation">(</span><span class="token string">&#39;No users found&#39;</span><span class="token punctuation">,</span> <span class="token number">404</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n    getOneUser <span class="token operator">=</span> <span class="token function">asyncHandler</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> id <span class="token operator">=</span> Validator<span class="token punctuation">.</span><span class="token function">validateId</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>params<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token keyword">await</span> Validator<span class="token punctuation">.</span><span class="token function">checkEntityById</span><span class="token punctuation">(</span>UserService<span class="token punctuation">.</span>getOneUserById<span class="token punctuation">,</span> id<span class="token punctuation">,</span> <span class="token string">&quot;User&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n    updateUser <span class="token operator">=</span> <span class="token function">asyncHandler</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token function">transformData</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">const</span> <span class="token punctuation">{</span>id<span class="token punctuation">,</span> email<span class="token punctuation">,</span> roleId<span class="token punctuation">}</span> <span class="token operator">=</span> Validator<span class="token punctuation">.</span><span class="token function">validateUserData</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>\n\n        <span class="token keyword">await</span> Validator<span class="token punctuation">.</span><span class="token function">checkEntityById</span><span class="token punctuation">(</span>UserService<span class="token punctuation">.</span>getOneUserById<span class="token punctuation">,</span> id<span class="token punctuation">,</span> <span class="token string">&quot;User&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">await</span> Validator<span class="token punctuation">.</span><span class="token function">validateEmail</span><span class="token punctuation">(</span>UserService<span class="token punctuation">.</span>getOneUserByEmail<span class="token punctuation">,</span> email<span class="token punctuation">)</span>\n        <span class="token keyword">await</span> Validator<span class="token punctuation">.</span><span class="token function">validateRole</span><span class="token punctuation">(</span>UserService<span class="token punctuation">.</span>roleExists<span class="token punctuation">,</span> roleId<span class="token punctuation">)</span>\n\n        <span class="token keyword">await</span> UserService<span class="token punctuation">.</span><span class="token function">updateUser</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">User with ID </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> successfully updated</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n    deleteUser <span class="token operator">=</span> <span class="token function">asyncHandler</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> id <span class="token operator">=</span> Validator<span class="token punctuation">.</span><span class="token function">validateId</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>params<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">await</span> Validator<span class="token punctuation">.</span><span class="token function">checkEntityById</span><span class="token punctuation">(</span>UserService<span class="token punctuation">.</span>getOneUserById<span class="token punctuation">,</span> id<span class="token punctuation">,</span> <span class="token string">&quot;User&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">await</span> UserService<span class="token punctuation">.</span><span class="token function">deleteUser</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">User with ID </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> successfully deleted</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">UserController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>SessionController.js</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> asyncHandler <span class="token keyword">from</span> <span class="token string">&quot;../utils/asyncHandler.js&quot;</span>\n<span class="token keyword">import</span> SessionService <span class="token keyword">from</span> <span class="token string">&quot;../services/SessionService.js&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Validator <span class="token keyword">from</span> <span class="token string">&quot;../utils/Validator.js&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> ApiError <span class="token keyword">from</span> <span class="token string">&quot;../utils/apiError.js&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">SessionController</span> <span class="token punctuation">{</span>\n    createSession <span class="token operator">=</span> <span class="token function">asyncHandler</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> data <span class="token operator">=</span> req<span class="token punctuation">.</span>body<span class="token punctuation">;</span>\n        <span class="token keyword">const</span> <span class="token punctuation">{</span>id<span class="token punctuation">,</span> User_id<span class="token punctuation">}</span> <span class="token operator">=</span> Validator<span class="token punctuation">.</span><span class="token function">validateSessionData</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">const</span> session <span class="token operator">=</span> <span class="token keyword">await</span> SessionService<span class="token punctuation">.</span><span class="token function">getOneSession</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>session<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ApiError</span><span class="token punctuation">(</span><span class="token string">&quot;Session already exists&quot;</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">await</span> Validator<span class="token punctuation">.</span><span class="token function">validateUser</span><span class="token punctuation">(</span>SessionService<span class="token punctuation">.</span>userExists<span class="token punctuation">,</span> User_id<span class="token punctuation">)</span>\n        <span class="token keyword">await</span> SessionService<span class="token punctuation">.</span><span class="token function">createSession</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">201</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Session with ID </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> successfully created</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    getSessions <span class="token operator">=</span> <span class="token function">asyncHandler</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> sessions <span class="token operator">=</span> <span class="token keyword">await</span> SessionService<span class="token punctuation">.</span><span class="token function">getSessions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>sessions <span class="token operator">||</span> sessions<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ApiError</span><span class="token punctuation">(</span><span class="token string">&#39;No sessions found&#39;</span><span class="token punctuation">,</span> <span class="token number">404</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span>sessions<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n    getOneSession <span class="token operator">=</span> <span class="token function">asyncHandler</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> id <span class="token operator">=</span> Validator<span class="token punctuation">.</span><span class="token function">validateId</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>params<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">const</span> session <span class="token operator">=</span> <span class="token keyword">await</span> Validator<span class="token punctuation">.</span><span class="token function">checkEntityById</span><span class="token punctuation">(</span>SessionService<span class="token punctuation">.</span>getOneSession<span class="token punctuation">,</span> id<span class="token punctuation">,</span> <span class="token string">&quot;Session&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n    updateSession <span class="token operator">=</span> <span class="token function">asyncHandler</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> data <span class="token operator">=</span> req<span class="token punctuation">.</span>body<span class="token punctuation">;</span>\n        <span class="token keyword">const</span> <span class="token punctuation">{</span>id<span class="token punctuation">,</span> User_id<span class="token punctuation">}</span> <span class="token operator">=</span> Validator<span class="token punctuation">.</span><span class="token function">validateSessionData</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>\n\n        <span class="token keyword">await</span> Validator<span class="token punctuation">.</span><span class="token function">validateUser</span><span class="token punctuation">(</span>SessionService<span class="token punctuation">.</span>userExists<span class="token punctuation">,</span> User_id<span class="token punctuation">)</span>\n        <span class="token keyword">await</span> Validator<span class="token punctuation">.</span><span class="token function">checkEntityById</span><span class="token punctuation">(</span>SessionService<span class="token punctuation">.</span>getOneSession<span class="token punctuation">,</span> id<span class="token punctuation">,</span> <span class="token string">&quot;Session&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">await</span> SessionService<span class="token punctuation">.</span><span class="token function">updateSession</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Session with ID </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> successfully updated</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n    deleteSession <span class="token operator">=</span> <span class="token function">asyncHandler</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> id <span class="token operator">=</span> Validator<span class="token punctuation">.</span><span class="token function">validateId</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>params<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">await</span> Validator<span class="token punctuation">.</span><span class="token function">checkEntityById</span><span class="token punctuation">(</span>SessionService<span class="token punctuation">.</span>getOneSession<span class="token punctuation">,</span> id<span class="token punctuation">,</span> <span class="token string">&quot;Session&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">await</span> SessionService<span class="token punctuation">.</span><span class="token function">deleteSession</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Session with ID </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> successfully deleted</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">SessionController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="сервіси-для-роботи-з-бд" tabindex="-1"><a class="header-anchor" href="#сервіси-для-роботи-з-бд"><span>Сервіси для роботи з БД</span></a></h2><p><strong>UserService.js</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> pool <span class="token keyword">from</span> <span class="token string">&quot;../db.js&quot;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span>\n    <span class="token keyword">async</span> <span class="token function">createUser</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> <span class="token punctuation">{</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> password<span class="token punctuation">,</span> email<span class="token punctuation">,</span> creationDate<span class="token punctuation">,</span> lastLoginDate<span class="token punctuation">,</span> roleId<span class="token punctuation">}</span> <span class="token operator">=</span> data<span class="token punctuation">;</span>\n        <span class="token keyword">const</span> values <span class="token operator">=</span> <span class="token punctuation">[</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> password<span class="token punctuation">,</span> email<span class="token punctuation">,</span> creationDate<span class="token punctuation">,</span> lastLoginDate<span class="token punctuation">,</span> roleId<span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token keyword">const</span> query <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">INSERT INTO User (id, name, password, email, account_creation_date, last_login_date, Role_id)\n                       VALUES (?, ?, ?, ?, ?, ?, ?)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> pool<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>query<span class="token punctuation">,</span> values<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">async</span> <span class="token function">getUsers</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> <span class="token punctuation">[</span>dataRows<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> pool<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">&#39;SELECT * FROM User&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> dataRows<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">async</span> <span class="token function">getOneUserById</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> <span class="token punctuation">[</span>dataRow<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> pool<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">&#39;SELECT * FROM User WHERE id = ?&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> dataRow<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">async</span> <span class="token function">getOneUserByEmail</span><span class="token punctuation">(</span><span class="token parameter">email</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> <span class="token punctuation">[</span>dataRow<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> pool<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">&#39;SELECT * FROM User WHERE email = ?&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>email<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> dataRow<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">async</span> <span class="token function">updateUser</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> <span class="token punctuation">{</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> password<span class="token punctuation">,</span> email<span class="token punctuation">,</span> lastLoginDate<span class="token punctuation">,</span> roleId<span class="token punctuation">}</span> <span class="token operator">=</span> data<span class="token punctuation">;</span>\n        <span class="token keyword">const</span> values <span class="token operator">=</span> <span class="token punctuation">[</span>name<span class="token punctuation">,</span> password<span class="token punctuation">,</span> email<span class="token punctuation">,</span> lastLoginDate<span class="token punctuation">,</span> roleId<span class="token punctuation">,</span> id<span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token keyword">const</span> query <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">UPDATE User\n                       SET name            = ?,\n                           password        = ?,\n                           email           = ?,\n                           last_login_date = ?,\n                           Role_id         = ?\n                       WHERE id = ?</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> pool<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>query<span class="token punctuation">,</span> values<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">async</span> <span class="token function">deleteUser</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> pool<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">&#39;DELETE FROM User WHERE id = ?&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">async</span> <span class="token function">roleExists</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> <span class="token punctuation">[</span>dataRow<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> pool<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">&#39;SELECT * FROM Role WHERE id = ?&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> dataRow<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">UserService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>SessionService.js</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> pool <span class="token keyword">from</span> <span class="token string">&quot;../db.js&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">SessionService</span> <span class="token punctuation">{</span>\n    <span class="token keyword">async</span> <span class="token function">createSession</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> <span class="token punctuation">{</span>id<span class="token punctuation">,</span> login_time<span class="token punctuation">,</span> logout_time<span class="token punctuation">,</span> User_id<span class="token punctuation">}</span> <span class="token operator">=</span> data<span class="token punctuation">;</span>\n        <span class="token keyword">const</span> values <span class="token operator">=</span> <span class="token punctuation">[</span>id<span class="token punctuation">,</span> login_time<span class="token punctuation">,</span> logout_time<span class="token punctuation">,</span> User_id<span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token keyword">const</span> query <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">INSERT INTO Session (id, login_time, logout_time, User_id)\n                       VALUES (?, ?, ?, ?)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> pool<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>query<span class="token punctuation">,</span> values<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">async</span> <span class="token function">getSessions</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> <span class="token punctuation">[</span>dataRows<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> pool<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">&#39;SELECT * FROM Session&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> dataRows<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">async</span> <span class="token function">getOneSession</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> <span class="token punctuation">[</span>dataRow<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> pool<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">&#39;SELECT * FROM Session WHERE id = ?&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> dataRow<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">async</span> <span class="token function">updateSession</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> <span class="token punctuation">{</span>id<span class="token punctuation">,</span> login_time<span class="token punctuation">,</span> logout_time<span class="token punctuation">,</span> User_id<span class="token punctuation">}</span> <span class="token operator">=</span> data<span class="token punctuation">;</span>\n        <span class="token keyword">const</span> values <span class="token operator">=</span> <span class="token punctuation">[</span>login_time<span class="token punctuation">,</span> logout_time<span class="token punctuation">,</span> User_id<span class="token punctuation">,</span> id<span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token keyword">const</span> query <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">UPDATE Session\n                       SET login_time  = ?,\n                           logout_time = ?,\n                           User_id     = ?\n                       WHERE id = ?</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> pool<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>query<span class="token punctuation">,</span> values<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">async</span> <span class="token function">deleteSession</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> pool<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">&#39;DELETE FROM Session WHERE id = ?&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">async</span> <span class="token function">userExists</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> <span class="token punctuation">[</span>dataRow<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> pool<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">&#39;SELECT * FROM User WHERE id = ?&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> dataRow<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">SessionService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="клас-для-помилок-програми" tabindex="-1"><a class="header-anchor" href="#клас-для-помилок-програми"><span>Клас для помилок програми</span></a></h2><p><strong>apiError.js</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">ApiError</span> <span class="token keyword">extends</span> <span class="token class-name">Error</span> <span class="token punctuation">{</span>\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">message<span class="token punctuation">,</span> statusCode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">super</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>statusCode <span class="token operator">=</span> statusCode<span class="token punctuation">;</span>\n        Error<span class="token punctuation">.</span><span class="token function">captureStackTrace</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>constructor<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="асинхроннии-обробник" tabindex="-1"><a class="header-anchor" href="#асинхроннии-обробник"><span>Асинхронний обробник</span></a></h2><p><strong>asyncHandler.js</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">asyncUtil</span> <span class="token operator">=</span> <span class="token parameter">fn</span> <span class="token operator">=&gt;</span>\n    <span class="token keyword">function</span> <span class="token function">asyncUtilWrap</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> fnReturn <span class="token operator">=</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span>\n        <span class="token keyword">const</span> next <span class="token operator">=</span> args<span class="token punctuation">[</span>args<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>\n        <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>fnReturn<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> asyncUtil<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="трансформація-даних-користувача" tabindex="-1"><a class="header-anchor" href="#трансформація-даних-користувача"><span>Трансформація даних користувача</span></a></h2><p><strong>transformUserData.js</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">transformUserData</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">id</span><span class="token operator">:</span> data<span class="token punctuation">.</span>id<span class="token punctuation">,</span>\n        <span class="token literal-property property">name</span><span class="token operator">:</span> data<span class="token punctuation">.</span>name<span class="token punctuation">,</span>\n        <span class="token literal-property property">password</span><span class="token operator">:</span> data<span class="token punctuation">.</span>password<span class="token punctuation">,</span>\n        <span class="token literal-property property">email</span><span class="token operator">:</span> data<span class="token punctuation">.</span>email<span class="token punctuation">,</span>\n        <span class="token literal-property property">creationDate</span><span class="token operator">:</span> data<span class="token punctuation">.</span>account_creation_date<span class="token punctuation">,</span>\n        <span class="token literal-property property">lastLoginDate</span><span class="token operator">:</span> data<span class="token punctuation">.</span>last_login_date<span class="token punctuation">,</span>\n        <span class="token literal-property property">roleId</span><span class="token operator">:</span> data<span class="token punctuation">.</span>Role_id\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> transformUserData<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="валідатор-даних" tabindex="-1"><a class="header-anchor" href="#валідатор-даних"><span>Валідатор даних</span></a></h2><p><strong>Validator.js</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> ApiError <span class="token keyword">from</span> <span class="token string">&quot;./apiError.js&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Validator</span> <span class="token punctuation">{</span>\n    <span class="token function-variable function">validateId</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>id <span class="token operator">||</span> <span class="token function">isNaN</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token operator">||</span> id <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ApiError</span><span class="token punctuation">(</span><span class="token string">&#39;Invalid or missing user ID&#39;</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> id<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token function-variable function">validateUserData</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> <span class="token punctuation">{</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> password<span class="token punctuation">,</span> email<span class="token punctuation">,</span> creationDate<span class="token punctuation">,</span> lastLoginDate<span class="token punctuation">,</span> roleId<span class="token punctuation">}</span> <span class="token operator">=</span> data<span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>id <span class="token operator">||</span> <span class="token operator">!</span>name <span class="token operator">||</span> <span class="token operator">!</span>password <span class="token operator">||</span> <span class="token operator">!</span>email <span class="token operator">||</span> <span class="token operator">!</span>creationDate <span class="token operator">||</span> <span class="token operator">!</span>lastLoginDate <span class="token operator">||</span> <span class="token operator">!</span>roleId<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ApiError</span><span class="token punctuation">(</span><span class="token string">&quot;All required fields must be provided&quot;</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> <span class="token punctuation">{</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> password<span class="token punctuation">,</span> email<span class="token punctuation">,</span> creationDate<span class="token punctuation">,</span> lastLoginDate<span class="token punctuation">,</span> roleId<span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token function-variable function">validateSessionData</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> <span class="token punctuation">{</span>id<span class="token punctuation">,</span> login_time<span class="token punctuation">,</span> logout_time<span class="token punctuation">,</span> User_id<span class="token punctuation">}</span> <span class="token operator">=</span> data<span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>id <span class="token operator">||</span> <span class="token operator">!</span>login_time <span class="token operator">||</span> <span class="token operator">!</span>logout_time <span class="token operator">||</span> <span class="token operator">!</span>User_id<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ApiError</span><span class="token punctuation">(</span><span class="token string">&quot;All required fields must be provided&quot;</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> <span class="token punctuation">{</span>id<span class="token punctuation">,</span> login_time<span class="token punctuation">,</span> logout_time<span class="token punctuation">,</span> User_id<span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">async</span> <span class="token function">validateEmail</span><span class="token punctuation">(</span><span class="token parameter">serviceMethod<span class="token punctuation">,</span> email</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> userByEmail <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">serviceMethod</span><span class="token punctuation">(</span>email<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>userByEmail<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ApiError</span><span class="token punctuation">(</span><span class="token string">&quot;Email already in use&quot;</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">async</span> <span class="token function">validateRole</span><span class="token punctuation">(</span><span class="token parameter">serviceMethod<span class="token punctuation">,</span> role</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> roleExists <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">serviceMethod</span><span class="token punctuation">(</span>role<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>roleExists<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ApiError</span><span class="token punctuation">(</span><span class="token string">&quot;Role does not exist&quot;</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">async</span> <span class="token function">validateUser</span><span class="token punctuation">(</span><span class="token parameter">serviceMethod<span class="token punctuation">,</span> user</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> userExists <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">serviceMethod</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>userExists<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ApiError</span><span class="token punctuation">(</span><span class="token string">&quot;User does not exist&quot;</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">async</span> <span class="token function">checkEntityById</span><span class="token punctuation">(</span>serviceMethod<span class="token punctuation">,</span> id<span class="token punctuation">,</span> entityName <span class="token operator">=</span> <span class="token string">&quot;Entity&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> entity <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">serviceMethod</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>entity<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ApiError</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>entityName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> with ID </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> not found</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token number">404</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> entity<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">Validator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',38),i=[p];function o(c,l){return s(),a("div",null,i)}const r=n(e,[["render",o],["__file","index.html.vue"]]),k=JSON.parse('{"path":"/software/","title":"Реалізація інформаційного та програмного забезпечення","lang":"en-US","frontmatter":{"description":"Реалізація інформаційного та програмного забезпечення Короткий зміст Реалізація інформаційного та програмного забезпечення SQL-скрипт для створення та початкового наповнення баз...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/db-labs/software/"}],["meta",{"property":"og:site_name","content":"Система управління відкритими даними"}],["meta",{"property":"og:title","content":"Реалізація інформаційного та програмного забезпечення"}],["meta",{"property":"og:description","content":"Реалізація інформаційного та програмного забезпечення Короткий зміст Реалізація інформаційного та програмного забезпечення SQL-скрипт для створення та початкового наповнення баз..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-12-09T18:45:42.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-09T18:45:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Реалізація інформаційного та програмного забезпечення\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-09T18:45:42.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Короткий зміст","slug":"короткии-зміст","link":"#короткии-зміст","children":[]},{"level":2,"title":"SQL-скрипт для створення та початкового наповнення бази даних","slug":"sql-скрипт-для-створення-та-початкового-наповнення-бази-даних","link":"#sql-скрипт-для-створення-та-початкового-наповнення-бази-даних","children":[]},{"level":2,"title":"RESTful сервіс для управління даними","slug":"restful-сервіс-для-управління-даними","link":"#restful-сервіс-для-управління-даними","children":[]},{"level":2,"title":"Сервер & Підключення до БД","slug":"сервер-підключення-до-бд","link":"#сервер-підключення-до-бд","children":[]},{"level":2,"title":"Маршрути","slug":"маршрути","link":"#маршрути","children":[]},{"level":2,"title":"Контролери","slug":"контролери","link":"#контролери","children":[]},{"level":2,"title":"Сервіси для роботи з БД","slug":"сервіси-для-роботи-з-бд","link":"#сервіси-для-роботи-з-бд","children":[]},{"level":2,"title":"Клас для помилок програми","slug":"клас-для-помилок-програми","link":"#клас-для-помилок-програми","children":[]},{"level":2,"title":"Асинхронний обробник","slug":"асинхроннии-обробник","link":"#асинхроннии-обробник","children":[]},{"level":2,"title":"Трансформація даних користувача","slug":"трансформація-даних-користувача","link":"#трансформація-даних-користувача","children":[]},{"level":2,"title":"Валідатор даних","slug":"валідатор-даних","link":"#валідатор-даних","children":[]}],"git":{"createdTime":1708081508000,"updatedTime":1733769942000,"contributors":[{"name":"dk872","email":"143122117+dk872@users.noreply.github.com","commits":5},{"name":"watashone","email":"102485743+watashone@users.noreply.github.com","commits":3},{"name":"Dmytro Zanuda","email":"dmzanuda.work@gmail.com","commits":1},{"name":"watashone","email":"balabas191@gmail.com","commits":1}]},"readingTime":{"minutes":11.1,"words":3329},"filePathRelative":"software/README.md","localizedDate":"February 16, 2024","autoDesc":true}');export{r as comp,k as data};
